services:
    backend:
        image: backend:dev
        container_name: backend_container
#        command: >
#          bash -c "npm install
#          && npm run start:dev"
        restart: always
        ports:
            - "3000:3000"
            - "222:22"
        build:
            context: requirements/backend
        command: npm install
        networks:
            - transnet
#        depends_on:
#            - postgresql
        volumes:
            - backend:/backend/
#        stdin_open: true # docker run -i
#        tty: true        # docker run -t

#    postgresql:
#        image: postgres:14.3-alpine
#        container_name: postgresql_container
#        restart: always
#        ports:
#            - "5432:5432"
#        environment:
#            POSTGRES_USER: root
#            POSTGRES_PASSWORD: root
#            #            POSTGRES_DB: test_db
#        networks:
#            - transnet
#        volumes:
#            - postgresql:/var/lib/postgresql/data

#    pgadmin:
#        image: dpage/pgadmin4
#        container_name: pgadmin4_container
#        restart: always
#        ports:
#            - "5050:80"
#        environment:
#            PGADMIN_DEFAULT_EMAIL: admin@admin.com
#            PGADMIN_DEFAULT_PASSWORD: root
#        networks:
#            - transnet

networks:
    transnet:
        name: transnet

volumes:
    backend:
        name: backend-volume
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ${PWD}/src/requirements/backend/vol

    frontend:
        name: frontend-volume
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ${PWD}/src/requirements/frontend/vol

    postgresql:
        name: postgresql-volume
        driver: local
        driver_opts:
            o: bind
            type: none
            device: ${PWD}/src/requirements/postgresql/vol
